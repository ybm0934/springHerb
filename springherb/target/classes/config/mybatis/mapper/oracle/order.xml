<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.order">
	<resultMap type="OrderAllVO" id="orderListMap">
		<association property="orderVo" column="orderNo" javaType="OrderVO">
			<id column="orderNo" property="orderNo" jdbcType="BIGINT"/>
			<result column="totalPrice" property="totalPrice" jdbcType="BIGINT"/>
			<result column="customerId" property="customerId" jdbcType="VARCHAR"/>
			<result column="deliveryStatus" jdbcType="VARCHAR" property="deliveryStatus"/>
		  	<result column="orderDate" jdbcType="TIMESTAMP" property="orderDate"/>
		  	<result column="deliveryDate" jdbcType="TIMESTAMP" property="deliveryDate"/>
		  	<result column="paymentEndDate" jdbcType="TIMESTAMP" property="paymentEndDate"/>
		  	<result column="message" jdbcType="VARCHAR" property="message"/>
		  	<result column="customerName" jdbcType="VARCHAR" property="customerName"/>
		  	<result column="hp" jdbcType="VARCHAR" property="hp"/>
		  	<result column="zipcode" jdbcType="VARCHAR" property="zipcode"/>
		  	<result column="address" jdbcType="VARCHAR" property="address"/>
		  	<result column="addressDetail" jdbcType="VARCHAR" property="addressDetail"/>			
		</association>	
		<collection property="orderDetailsList" select="selectOrderDetailsView" 
			column="orderNo" javaType="ArrayList" ofType="map">	
		</collection>	
	</resultMap>
	
	<insert id="insertOrder" parameterType="orderVo">
		<selectKey keyProperty="orderNo" order="BEFORE" resultType="int">
			select 	orders_seq.nextval from dual	
		</selectKey>
		insert into orders(orderno, customerId, totalPrice, message, customerName,
		hp, zipcode, address, addressDetail)
		values(#{orderNo}, #{customerId}, #{totalPrice}, #{message}, #{customerName},
			#{hp}, #{zipcode}, #{address}, #{addressDetail})	
	</insert>
	
	<update id="insertOrderDetail" parameterType="map">
		insert into orderDetails(orderNo, productNo, quantity)
		select #{orderNo}, productno, quantity 
		from cart
		where customerId=#{customerId}
	</update>
	
	<select id="selectOrderDetailsView" parameterType="int" resultType="map">
		select * from orderDetailsView
		where orderno=#{orderNo}
	</select>

	<select id="selectOrdersView" parameterType="int" resultType="hashmap">
		select * from ordersView
		where orderno=#{orderNo}
	</select>	
	
	<select id="selectOrderList" parameterType="DateSearchVo" resultMap="orderListMap">
		select *
		from
		(
		    select rownum as RNUM, list.*
		    from (
		        select * from orders
                where orderdate>=#{startDay} <![CDATA[
                and orderdate< to_date(#{endDay})+1
            ]]>  
            	<if test="customerId!=null and customerId!=''">
                	and customerid=#{customerId}
                </if>
                order by orderNo desc
		    )list
		)    
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
		and RNUM<=#{firstRecordIndex}+#{recordCountPerPage}
		]]>
	</select>
	
	<select id="selectTotalRecord" parameterType="DateSearchVo" resultType="int">
		select count(*) from orders
        where orderdate>=#{startDay} <![CDATA[
        and orderdate< to_date(#{endDay})+1
    	]]>  
    	<if test="customerId!=null and customerId!=''">
        	and customerid=#{customerId}
        </if>
	</select>
	
	<select id="selectBestProduct" parameterType="int" resultType="map">
		select * 
		from(
		    select o.productno, p.productname, sum(quantity) as sumofqty
		    from orderDetails o join products p
		    on o.productno=p.productno
		    and p.categoryno=(select categoryno from products where productno=#{productNo})
		    group by o.productno, p.productname
		    order by sumofqty desc
		)
		<![CDATA[where rownum <= 5]]>
	</select>
	
	
</mapper>